plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply from: "../scripts/versions.gradle"
apply from: "../scripts/flavours.gradle"


android {
    compileSdkVersion 30
    buildToolsVersion "30.0.0"

    defaultConfig {
        applicationId "com.recepie"
        minSdkVersion 25
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    def room_version = "2.3.0-beta01"

    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:${versionsExternal.ktxVersion}"
    implementation "androidx.appcompat:appcompat:${versionsExternal.appcompatVersion}"
    implementation "com.google.android.material:material:${versionsExternal.materialVersion}"
    implementation "androidx.constraintlayout:constraintlayout:${versionsExternal.constraintlayoutVersion}"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${versionsExternal.liveDataKtx}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versionsExternal.viewModelKtx}"

    implementation 'androidx.fragment:fragment-ktx:1.3.0'
    implementation 'com.squareup.retrofit2:retrofit:2.6.0'
    implementation 'com.android.volley:volley:1.1.1'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation "androidx.recyclerview:recyclerview:1.1.0"
    implementation 'com.github.bumptech.glide:glide:4.9.0'

    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"
    testImplementation "org.powermock:powermock-api-mockito2"

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:2.23.0'
    testImplementation "io.mockk:mockk:1.10.2"

    testImplementation 'org.powermock:powermock-core:1.7.4'
    testImplementation 'org.powermock:powermock-module-testng:1.7.4'
    testImplementation 'org.powermock:powermock-api-mockito2:1.7.4'
    testImplementation "org.powermock:powermock-module-junit4:1.6.5"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.3.0'
    testImplementation 'android.arch.core:core-testing:1.0.0-alpha3'


}